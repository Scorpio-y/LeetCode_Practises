/*
https://leetcode-cn.com/problems/fibonacci-number/
 
题目难度：简单

题目：斐波那契数，通常用 F(n) 表示，形成的序列称为斐波那契数列。
该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：
F(0) = 0,   F(1) = 1
F(N) = F(N - 1) + F(N - 2), 其中 N > 1.
给定 N，计算 F(N)。

示例 1：
输入：2
输出：1
解释：F(2) = F(1) + F(0) = 1 + 0 = 1.

示例 2：
输入：3
输出：2
解释：F(3) = F(2) + F(1) = 1 + 1 = 2.

示例 3：
输入：4
输出：3
解释：F(4) = F(3) + F(2) = 2 + 1 = 3.

提示：
0 ≤ N ≤ 30

 * */

public class Solution {
	public static void main(String[] args) {
		System.out.println(fib1(20));
		System.out.println(fib2(20));
	}
	
	// 1. 递归
	public static int fib1(int N) {
        if(N<=1) return N;
        return fib1(N-1)+fib1(N-2);
    }
	
	// 2. 非递归
	public static int fib2(int N) {
		if(N<=1) return N;
		int pre1 = 1;  // 往前数一个
		int pre2 = 0;  // 往前数两个
		int res = 0;
		for(int i=2;i<=N;i++) {
			res = pre1+pre2;
			pre2 = pre1;
			pre1 = res;
		}
		return res;
	}
}